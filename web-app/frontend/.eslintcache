[{"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js":"1","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js":"2","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js":"3","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js":"4","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js":"5","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/login.js":"6","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/store.js":"7","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/index.js":"8","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/auth.js":"9","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/types.js":"10"},{"size":602,"mtime":1609541874627,"results":"11","hashOfConfig":"12"},{"size":11822,"mtime":1609541614219,"results":"13","hashOfConfig":"12"},{"size":219,"mtime":1609459624172,"results":"14","hashOfConfig":"12"},{"size":1776,"mtime":1609543569215,"results":"15","hashOfConfig":"12"},{"size":1129,"mtime":1608740215454,"results":"16","hashOfConfig":"12"},{"size":5224,"mtime":1609541680335,"results":"17","hashOfConfig":"12"},{"size":388,"mtime":1609510770123,"results":"18","hashOfConfig":"12"},{"size":114,"mtime":1609510568054,"results":"19","hashOfConfig":"12"},{"size":284,"mtime":1609510954353,"results":"20","hashOfConfig":"12"},{"size":719,"mtime":1609545916084,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"mzj6la",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js",[],["46","47"],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js",["48","49","50","51","52"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useMedia } from 'react-media';\nimport axios from 'axios';\n\nimport { Form, Input, Button, Space, Typography, Tooltip, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone, MailOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n//import { signup } from '../store/actions/auth';\nimport PasswordStrengthMeter from '../components/PasswordStrengthMeter'\nimport { ReactComponent as EmailIcon } from '../assets/EmailIcon.svg';\n\nconst { Text, Title  } = Typography;\n\nconst SignUp = ({ signup, isAuthenticated}) => {\n    const [loading, setLoading] = useState(false);\n    const [emailSend, setEmailSend] = useState(false);\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        re_password: '',\n        terms: false\n    });\n\n\n    const GLOBAL_MEDIA_QUERIES = {\n        xs: \"(max-width: 480px)\",\n        sm: \"(max-width: 576px)\",\n        md: \"(max-width: 768px)\",\n        lg: \"(max-width: 992px)\",\n        xl: \"(max-width: 1200px)\",\n        xxl: \"(max-width: 1600px)\",\n    };\n    const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n    const spaceXs = matches.xs ? 0 : 24;\n\n    const { firstName, lastName, email, password, re_password, terms } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    var mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const buttonIsEnabled = email.match(mailformat) && password.length > 7 && password === re_password && firstName.length > 0 && lastName.length > 0 && terms === true;\n\n    const successMessage = (responseMessage) => {\n        message.success(responseMessage);\n    };\n    \n    const errorMessage = (responseMessage) => {\n        message.error(responseMessage);\n    };\n\n    const serverErrorMessage = (errorMessage) => {\n        message.error(errorMessage);\n    };\n\n    const submit = async () => {\n        try {\n            setLoading(true)\n            await axios.post('http://localhost:3000/account/register', {\n                firstName: firstName,\n                lastName: lastName,\n                email: email,\n                password: password,\n                withcredentials: true\n            }).then(res => {\n                if (res.data.success) {\n                    successMessage(res.data.message)\n                  } else {\n                    errorMessage(res.data.message)\n                  }\n            });\n            setLoading(false)\n            setEmailSend(true)\n        } catch (err) {\n            serverErrorMessage(err.message);\n        }\n    };\n  \n    const handleCheckbox = e => {\n        setFormData(({ terms, ...formData }) =>\n          ({ ...formData, terms: !terms })\n        );\n      };\n\n    if (isAuthenticated)\n        return <Redirect to='/' />;\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'space-between'}}>\n            { emailSend?\n                <Space direction=\"vertical\" size={30} style={{ width: '100%' }}>\n                    <Space direction=\"vertical\" size={45} style={{ width: '100%' }}>\n                        <Tooltip title=\"back to Login\">\n                            <Link to='/login'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                    <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                                </div>\n                            </Link>\n                        </Tooltip>\n                        <div style={{ width: '100%', justifyContent: 'center', display: 'flex' }}>\n                            {<EmailIcon style={{ height: '90px'}}/>}\n                        </div>\n                    </Space>\n                    <Title style={{ textAlign: 'center' }}level={2}>Please activate your Account</Title>\n                    <div style={{ textAlign: 'center'}}>\n                        <Text >We have sent you your email activation link to your email.</Text>\n                    </div>\n                </Space>:\n                <Space \n                    direction=\"vertical\"\n                    size={spaceXs} \n                    style={{ width: '100%' }}\n                >\n                    <Title>EHR</Title>\n                    <Title level={2}>Create your account</Title>\n                    <Form \n                        onFinish={submit}\n                        spellcheck=\"false\"\n                        >\n                        <div style={{ display: 'flex', width: '100%' }}>\n                            <Space style={{ width: '100%', justifyContent: 'space-between'}}>\n                                <Form.Item\n                                    name='firstNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your first Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='first Name'\n                                        name='firstName'\n                                        autoComplete='given-name'\n                                        value={firstName}\n                                        onChange={e => onChange(e)}\n                                        prefix={<UserOutlined />}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name='lastNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your last Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='last Name'\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        value={lastName}\n                                        onChange={e => onChange(e)}\n                                    />\n                                </Form.Item>\n                            </Space>\n                        </div>\n                        <Form.Item\n                            name='emailFormItem' \n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                                ]}\n                            >\n                            <Input \n                                size=\"large\" \n                                type='email'\n                                autoComplete='email'\n                                placeholder='Email'\n                                name='email'\n                                value={email}\n                                onChange={e => onChange(e)}\n                                prefix={<MailOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"passwordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                            <Input.Password\n                                size='large'\n                                type='password'\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={e => onChange(e)}\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"confirmPasswordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please confirm your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                                <Input.Password\n                                    size='large'\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    name='re_password'\n                                    value={re_password}\n                                    onChange={e => onChange(e)}\n                                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                />\n                            </Form.Item>\n                        <Form.Item>\n                            <PasswordStrengthMeter password={password}/>\n                        </Form.Item>\n                        <Form.Item name=\"terms\" valuePropName=\"checked\">\n                            <Checkbox name=\"terms\" onChange={e => handleCheckbox(e)} value={terms}>I accept the <Link to='!#'>Terms of service</Link> and privacy policy</Checkbox>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button \n                                type=\"primary\"\n                                loading={loading}\n                                block\n                                disabled={!buttonIsEnabled}\n                                htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Text>Alredy have an account?<Link to='/login'> Login</Link></Text>\n                        </Form.Item>\n                    </Form>\n                </Space>\n        }\n        </div>\n        \n    );\n};\n  \nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  }\n};\n\nexport default (SignUp);","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/login.js",["53","54","55"],"import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useMedia } from 'react-media';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nimport { Form, Input, Button, Checkbox, Space, Typography, message } from 'antd';\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\n\naxios.defaults.withCredentials = true;\n\nconst { Text, Title  } = Typography;\n\nconst NormalLoginForm = props => {\n  const [loading, setLoading] = useState(false);\n  const [confirmMessage, setConfirmMessage] = useState(Cookies.get('confirmMessage'))\n\n  const GLOBAL_MEDIA_QUERIES = {\n      xs: \"(max-width: 480px)\",\n      sm: \"(max-width: 576px)\",\n      md: \"(max-width: 768px)\",\n      lg: \"(max-width: 992px)\",\n      xl: \"(max-width: 1200px)\",\n      xxl: \"(max-width: 1600px)\",\n  };\n  const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n  const spaceXs = matches.xs ? 0 : 24;\n\n  const [formData, setFormData] = useState({\n      email: '',\n      password: '',\n      rememberMe: true\n  });\n\n  const handleCheckbox = e => {\n      setFormData(({ rememberMe, ...formData }) =>\n      ({ ...formData, rememberMe: !rememberMe })\n      );\n  };\n\n  const { email, password, rememberMe } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const isEnabled = email.length > 0 && password.length > 7\n\n  const confirmationMessage = (confirmMessage) => {\n    message.success(confirmMessage);\n  };\n\n  const successMessage = (responseMessage) => {\n    message.success(responseMessage);\n  };\n\n  const errorMessage = (responseMessage) => {\n    message.error(responseMessage);\n  };\n\n  const serverErrorMessage = (errorMessage) => {\n    message.error(errorMessage);\n  };\n\n  const login = async () =>{\n    try  {\n      setLoading(true)\n      await axios.post('http://localhost:3000/account/login', {\n        email: email,\n        password: password,\n        withcredentials: true\n      }).then(res => {\n        if (res.data.success) {\n          successMessage(res.data.message)\n        } else {\n          errorMessage(res.data.message)\n        }\n    });\n    setLoading(false)\n    } catch (err) {\n      serverErrorMessage(err.message);\n    }\n  };\n\n  useEffect(() => {\n    if (confirmMessage) {\n      confirmationMessage(confirmMessage)\n    }\n  }, []);\n\n  if (props.isAuthenticated)\n    return <Redirect to='/' />;\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100%', width: '100%', justifyContent: 'space-between'}}>\n      <Space direction=\"vertical\" size={spaceXs} >\n        <Title>EHR</Title>\n        <Title level={2}>Log in to your account</Title>\n        <Form \n          onFinish={login}\n          initialValues={{\n            remember: true,\n          }}\n          spellCheck=\"false\"\n        >\n          <Form.Item\n            initialValue={email}\n            name='emailFormItem' \n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not a valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input \n              size=\"large\" \n              type='email'\n              placeholder='Email'\n              name='email'\n              value={email}\n              onChange={e => onChange(e)}\n              prefix={<UserOutlined />}\n            />\n          </Form.Item>\n          <Form.Item initialValue={password} name=\"passwordFormItem\" rules={[\n            { \n              required: true,\n              message: 'Please input your Password!',\n            },\n            { \n              min: 8,\n              message:'Minimum 8 characters!',\n            }\n            ]}\n          >\n              <Input.Password\n                size='large'\n                type='password'\n                placeholder='Password'\n                name='password'\n                value={password}\n                onChange={e => onChange(e)}\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              />\n          </Form.Item>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\n              <Checkbox onChange={e => handleCheckbox(e)} name=\"rememberMe\" value={rememberMe}>Remember me</Checkbox>\n            </Form.Item>\n            <Form.Item>\n              <Text>Don't have an account?<Link to='/register'> Register</Link></Text>\n            </Form.Item>\n          </div>\n          <Button \n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!isEnabled}\n            htmlType=\"submit\">\n            Login\n          </Button>\n        </Form>\n        <Text>Forgot your Password?<Link to='/reset_password'> Reset Password</Link></Text>\n      </Space>\n    </div>\n  );\n};\n  \nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    user: state.auth.user\n  }\n};\n\nexport default (NormalLoginForm);","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/store.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/index.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/auth.js",["56","57","58","59","60","61","62","63","64","65"],"import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    AUTHENTICATED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: []\n};","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/types.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":44,"nodeType":"72","messageId":"73","endLine":42,"endColumn":45,"suggestions":"74"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":69,"nodeType":"72","messageId":"73","endLine":42,"endColumn":70,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":78,"nodeType":"72","messageId":"73","endLine":42,"endColumn":79,"suggestions":"76"},{"ruleId":"70","severity":1,"message":"71","line":42,"column":82,"nodeType":"72","messageId":"73","endLine":42,"endColumn":83,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":262,"column":7,"nodeType":"80","messageId":"81","endLine":262,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":16,"column":26,"nodeType":"80","messageId":"81","endLine":16,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":87,"column":6,"nodeType":"85","endLine":87,"endColumn":8,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"79","line":173,"column":7,"nodeType":"80","messageId":"81","endLine":173,"endColumn":22},{"ruleId":"78","severity":1,"message":"87","line":2,"column":5,"nodeType":"80","messageId":"81","endLine":2,"endColumn":19},{"ruleId":"78","severity":1,"message":"88","line":3,"column":5,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"89","line":4,"column":5,"nodeType":"80","messageId":"81","endLine":4,"endColumn":18},{"ruleId":"78","severity":1,"message":"90","line":5,"column":5,"nodeType":"80","messageId":"81","endLine":5,"endColumn":15},{"ruleId":"78","severity":1,"message":"91","line":6,"column":5,"nodeType":"80","messageId":"81","endLine":6,"endColumn":11},{"ruleId":"78","severity":1,"message":"92","line":7,"column":5,"nodeType":"80","messageId":"81","endLine":7,"endColumn":23},{"ruleId":"78","severity":1,"message":"93","line":8,"column":5,"nodeType":"80","messageId":"81","endLine":8,"endColumn":26},{"ruleId":"78","severity":1,"message":"94","line":9,"column":5,"nodeType":"80","messageId":"81","endLine":9,"endColumn":24},{"ruleId":"78","severity":1,"message":"95","line":10,"column":5,"nodeType":"80","messageId":"81","endLine":10,"endColumn":21},{"ruleId":"78","severity":1,"message":"96","line":13,"column":7,"nodeType":"80","messageId":"81","endLine":13,"endColumn":19},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["99","100"],["101","102"],["103","104"],["105","106"],"no-unused-vars","'mapStateToProps' is assigned a value but never used.","Identifier","unusedVar","'setConfirmMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'confirmMessage'. Either include it or remove the dependency array.","ArrayExpression",["107"],"'SIGNUP_SUCCESS' is defined but never used.","'SIGNUP_FAIL' is defined but never used.","'LOGIN_SUCCESS' is defined but never used.","'LOGIN_FAIL' is defined but never used.","'LOGOUT' is defined but never used.","'AUTHENTICATED_FAIL' is defined but never used.","'AUTHENTICATED_SUCCESS' is defined but never used.","'USER_LOADED_SUCCESS' is defined but never used.","'USER_LOADED_FAIL' is defined but never used.","'initialState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"108","fix":"114","desc":"110"},{"messageId":"111","fix":"115","desc":"113"},{"messageId":"108","fix":"116","desc":"110"},{"messageId":"111","fix":"117","desc":"113"},{"messageId":"108","fix":"118","desc":"110"},{"messageId":"111","fix":"119","desc":"113"},{"desc":"120","fix":"121"},"removeEscape",{"range":"122","text":"123"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"124","text":"125"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"126","text":"123"},{"range":"127","text":"125"},{"range":"128","text":"123"},{"range":"129","text":"125"},{"range":"130","text":"123"},{"range":"131","text":"125"},"Update the dependencies array to be: [confirmMessage]",{"range":"132","text":"133"},[1531,1532],"",[1531,1531],"\\",[1556,1557],[1556,1556],[1565,1566],[1565,1565],[1569,1570],[1569,1569],[2367,2369],"[confirmMessage]"]