[{"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js":"1","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js":"2","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js":"3","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js":"4","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/reportWebVitals.js":"5","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js":"6"},{"size":584,"mtime":1608765357924,"results":"7","hashOfConfig":"8"},{"size":11047,"mtime":1608765911219,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1608732580203,"results":"10","hashOfConfig":"8"},{"size":499,"mtime":1608744045133,"results":"11","hashOfConfig":"8"},{"size":362,"mtime":1608732580204,"results":"12","hashOfConfig":"8"},{"size":1129,"mtime":1608740215454,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"s3rp4z",{"filePath":"17","messages":"18","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js",[],["29","30"],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js",["31","32","33","34","35","36","37"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport Media from \"react-media\";\nimport { useMedia } from 'react-media';\n\nimport { Form, Input, Button, Space, Typography, Tooltip, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone, MailOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n//import { signup } from '../store/actions/auth';\nimport PasswordStrengthMeter from '../components/PasswordStrengthMeter'\n//import { ReactComponent as EmailIcon } from '../assets/EmailIcon.svg';\n\nconst { Text, Title  } = Typography;\n\nconst SignUp = ({ signup, isAuthenticated}) => {\n\n    const GLOBAL_MEDIA_QUERIES = {\n        xs: \"(max-width: 480px)\",\n        sm: \"(max-width: 576px)\",\n        md: \"(max-width: 768px)\",\n        lg: \"(max-width: 992px)\",\n        xl: \"(max-width: 1200px)\",\n        xxl: \"(max-width: 1600px)\",\n    };\n    const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n    const spaceXs = matches.xs ? 0 : 24;\n\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        re_password: '',\n        terms: false\n    });\n\n    const { firstName, lastName, email, password, re_password, terms } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    var mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isEnabled = email.match(mailformat) && password.length > 7 && password === re_password && firstName.length > 0 && lastName.length > 0 && terms === true;\n\n    const name = firstName + ' ' + lastName;\n\n    const onSubmit = e => {\n        //e.preventDefault(); prevents the site from reloading only important when you use native html button or input not with AntDesign\n\n        if (password === re_password) {\n            signup(name, email, password, re_password);\n            setAccountCreated(true);\n        }\n    };\n  \n    const handleCheckbox = e => {\n        setFormData(({ terms, ...formData }) =>\n          ({ ...formData, terms: !terms })\n        );\n      };\n\n    if (isAuthenticated)\n        return <Redirect to='/' />;\n    /* if (accountCreated)\n        return <Redirect to='/login' />; */\n\n    return (\n        <div>\n            { accountCreated?\n            <div>\n                <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n                    <Tooltip title=\"back to Login\">\n                        <Link to='/login'>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                            </div>\n                        </Link>\n                    </Tooltip>\n                    <div style={{ width: '100%', justifyContent: 'center', display: 'flex' }}>\n                        Icon\n                        {/*<EmailIcon style={{ height: '90px'}}/>*/}\n                    </div>\n                    <Title style={{ textAlign: 'center' }}level={2}>Please activate your Account</Title>\n                    <div style={{ textAlign: 'center'}}>\n                        <Text >We have sent you your email activation link to your email.</Text>\n                    </div>\n                </Space>\n            </div>:\n            <div>\n\n                <Space \n                    direction=\"vertical\"\n                    size={spaceXs} \n                    style={{ width: '100%' }}\n                >\n                    <Title>EHR</Title>\n                    <Title level={2}>Create your account</Title>\n                    <Form \n                        onFinish={e => onSubmit(e)}\n                        spellcheck=\"false\"\n                        >\n                        <div style={{ display: 'flex', width: '100%' }}>\n                            <Space style={{ width: '100%', justifyContent: 'space-between'}}>\n                                <Form.Item\n                                    name='firstNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your first Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='first Name'\n                                        name='firstName'\n                                        autoComplete='given-name'\n                                        value={firstName}\n                                        onChange={e => onChange(e)}\n                                        prefix={<UserOutlined />}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name='lastNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your last Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='last Name'\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        value={lastName}\n                                        onChange={e => onChange(e)}\n                                    />\n                                </Form.Item>\n                            </Space>\n                        </div>\n                        <Form.Item\n                            name='emailFormItem' \n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                                ]}\n                            >\n                            <Input \n                                size=\"large\" \n                                type='email'\n                                autoComplete='email'\n                                placeholder='Email'\n                                name='email'\n                                value={email}\n                                onChange={e => onChange(e)}\n                                prefix={<MailOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"passwordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                            <Input.Password\n                                size='large'\n                                type='password'\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={e => onChange(e)}\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"confirmPasswordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please confirm your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                                <Input.Password\n                                    size='large'\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    name='re_password'\n                                    value={re_password}\n                                    onChange={e => onChange(e)}\n                                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                />\n                            </Form.Item>\n                        <Form.Item>\n                            <PasswordStrengthMeter password={password}/>\n                        </Form.Item>\n                        <Form.Item name=\"terms\" valuePropName=\"checked\">\n                            <Checkbox name=\"terms\" onChange={e => handleCheckbox(e)} value={terms}>I accept the <Link to='!#'>Terms of service</Link> and privacy policy</Checkbox>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button \n                                type=\"primary\"\n                                block\n                                disabled={!isEnabled}\n                                htmlType=\"submit\">\n                                SignUp\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Text>Alredy have an account?<Link to='/login'> Login</Link></Text>\n                        </Form.Item>\n                    </Form>\n                </Space>\n            </div>\n        }\n        </div>\n        \n    );\n};\n  \nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  }\n};\n\nexport default (SignUp);","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/reportWebVitals.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":17},{"ruleId":"44","severity":1,"message":"48","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":42,"column":44,"nodeType":"51","messageId":"52","endLine":42,"endColumn":45,"suggestions":"53"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":69,"nodeType":"51","messageId":"52","endLine":42,"endColumn":70,"suggestions":"54"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":78,"nodeType":"51","messageId":"52","endLine":42,"endColumn":79,"suggestions":"55"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":82,"nodeType":"51","messageId":"52","endLine":42,"endColumn":83,"suggestions":"56"},{"ruleId":"44","severity":1,"message":"57","line":243,"column":7,"nodeType":"46","messageId":"47","endLine":243,"endColumn":22},{"ruleId":"40","replacedBy":"58"},{"ruleId":"42","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'Media' is defined but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["62","63"],["64","65"],["66","67"],["68","69"],"'mapStateToProps' is assigned a value but never used.",["60"],["61"],"no-global-assign","no-unsafe-negation",{"messageId":"70","fix":"71","desc":"72"},{"messageId":"73","fix":"74","desc":"75"},{"messageId":"70","fix":"76","desc":"72"},{"messageId":"73","fix":"77","desc":"75"},{"messageId":"70","fix":"78","desc":"72"},{"messageId":"73","fix":"79","desc":"75"},{"messageId":"70","fix":"80","desc":"72"},{"messageId":"73","fix":"81","desc":"75"},"removeEscape",{"range":"82","text":"83"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"84","text":"85"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"86","text":"83"},{"range":"87","text":"85"},{"range":"88","text":"83"},{"range":"89","text":"85"},{"range":"90","text":"83"},{"range":"91","text":"85"},[1528,1529],"",[1528,1528],"\\",[1553,1554],[1553,1553],[1562,1563],[1562,1562],[1566,1567],[1566,1566]]