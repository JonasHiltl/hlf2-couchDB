[{"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js":"1","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js":"2","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js":"3","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js":"4","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js":"5","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/login.js":"6","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/store.js":"7","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/index.js":"8","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/auth.js":"9","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/types.js":"10","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/auth.js":"11","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/ResetPassword.js":"12","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/ResetPasswordConfirm.js":"13","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/Sider.js":"14","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/Index.js":"15","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/SidebarComps/NameIcon.js":"16"},{"size":602,"mtime":1609618333023,"results":"17","hashOfConfig":"18"},{"size":11592,"mtime":1609786636605,"results":"19","hashOfConfig":"18"},{"size":607,"mtime":1609617525403,"results":"20","hashOfConfig":"18"},{"size":1534,"mtime":1609787136520,"results":"21","hashOfConfig":"18"},{"size":1129,"mtime":1608740215454,"results":"22","hashOfConfig":"18"},{"size":5298,"mtime":1609787609847,"results":"23","hashOfConfig":"18"},{"size":388,"mtime":1609595467668,"results":"24","hashOfConfig":"18"},{"size":114,"mtime":1609510568054,"results":"25","hashOfConfig":"18"},{"size":1016,"mtime":1609784182289,"results":"26","hashOfConfig":"18"},{"size":280,"mtime":1609784193025,"results":"27","hashOfConfig":"18"},{"size":1509,"mtime":1609784108975,"results":"28","hashOfConfig":"18"},{"size":5809,"mtime":1609786642419,"results":"29","hashOfConfig":"18"},{"size":5975,"mtime":1609786638224,"results":"30","hashOfConfig":"18"},{"size":1382,"mtime":1609849384639,"results":"31","hashOfConfig":"18"},{"size":667,"mtime":1609787806808,"results":"32","hashOfConfig":"18"},{"size":122,"mtime":1609849289589,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"mzj6la",{"filePath":"37","messages":"38","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/containers/CenterItems.js",[],["75","76"],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/SignUp.js",["77","78","79","80","81","82","83","84","85","86"],"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMedia } from 'react-media';\nimport axios from 'axios';\n\nimport { Form, Input, Button, Space, Typography, Tooltip, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone, MailOutlined, ArrowLeftOutlined } from '@ant-design/icons';\n//import { signup } from '../store/actions/auth';\nimport PasswordStrengthMeter from '../components/PasswordStrengthMeter'\nimport { ReactComponent as EmailIcon } from '../assets/EmailIcon.svg';\nimport { register } from '../store/actions/auth'\n\nconst { Text, Title  } = Typography;\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n    const [loading, setLoading] = useState(false);\n    const [emailSend, setEmailSend] = useState(false);\n    const isAuthenticated = useSelector(state => state.isAuthenticated);\n    const [formData, setFormData] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        re_password: '',\n        terms: false\n    });\n\n    const GLOBAL_MEDIA_QUERIES = {\n        xs: \"(max-width: 480px)\",\n        sm: \"(max-width: 576px)\",\n        md: \"(max-width: 768px)\",\n        lg: \"(max-width: 992px)\",\n        xl: \"(max-width: 1200px)\",\n        xxl: \"(max-width: 1600px)\",\n    };\n    const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n    const spaceXs = matches.xs ? 0 : 24;\n\n    const { firstName, lastName, email, password, re_password, terms } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    var mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const buttonIsEnabled = email.match(mailformat) && password.length > 7 && password === re_password && firstName.length > 0 && lastName.length > 0 && terms === true;\n\n    const success = (responseMessage) => {\n        message.success(responseMessage);\n    };\n    \n    const error = (responseMessage) => {\n        message.error(responseMessage);\n    };\n\n    const onSubmit = async () => {\n        setLoading(true);\n        const res = await axios.post('http://localhost:3000/account/register', {\n            firstName: firstName,\n            lastName: lastName,\n            email: email,\n            password: password,\n            withcredentials: true\n        });\n        if (res.data.success === true) {\n            setEmailSend(true)\n            message.success(res.data.message);\n        } else if (res.data.success === false) {\n            message.error(res.data.message);\n        }\n        setLoading(false);\n      }\n  \n    const handleCheckbox = e => {\n        setFormData(({ terms, ...formData }) =>\n          ({ ...formData, terms: !terms })\n        );\n      };\n\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', height: '100%', justifyContent: 'space-between'}}>\n            { emailSend?\n                <Space direction=\"vertical\" size={30} style={{ width: '100%' }}>\n                    <Space direction=\"vertical\" size={45} style={{ width: '100%' }}>\n                        <Tooltip title=\"back to Login\">\n                            <Link to='/login'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                    <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                                </div>\n                            </Link>\n                        </Tooltip>\n                        <div style={{ width: '100%', justifyContent: 'center', display: 'flex' }}>\n                            {<EmailIcon style={{ height: '90px'}}/>}\n                        </div>\n                    </Space>\n                    <Title style={{ textAlign: 'center' }}level={2}>Please activate your Account</Title>\n                    <div style={{ textAlign: 'center'}}>\n                        <Text >We have sent you your email activation link to your email.</Text>\n                    </div>\n                </Space>:\n                <Space \n                    direction=\"vertical\"\n                    size={spaceXs} \n                    style={{ width: '100%' }}\n                >\n                    <Title>EHR</Title>\n                    <Title level={2}>Create your account</Title>\n                    <Form \n                        onFinish={onSubmit}\n                        spellcheck=\"false\"\n                        >\n                        <div style={{ display: 'flex', width: '100%' }}>\n                            <Space style={{ width: '100%', justifyContent: 'space-between'}}>\n                                <Form.Item\n                                    name='firstNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your first Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='first Name'\n                                        name='firstName'\n                                        autoComplete='given-name'\n                                        value={firstName}\n                                        onChange={e => onChange(e)}\n                                        prefix={<UserOutlined />}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    name='lastNameFormItem'\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your last Name!',\n                                        },\n                                    ]}\n                                    >\n                                    <Input \n                                        size=\"large\" \n                                        placeholder='last Name'\n                                        autoComplete='family-name'\n                                        name='lastName'\n                                        value={lastName}\n                                        onChange={e => onChange(e)}\n                                    />\n                                </Form.Item>\n                            </Space>\n                        </div>\n                        <Form.Item\n                            name='emailFormItem' \n                            rules={[\n                                {\n                                    type: 'email',\n                                    message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                    required: true,\n                                    message: 'Please input your E-mail!',\n                                },\n                                ]}\n                            >\n                            <Input \n                                size=\"large\" \n                                type='email'\n                                autoComplete='email'\n                                placeholder='Email'\n                                name='email'\n                                value={email}\n                                onChange={e => onChange(e)}\n                                prefix={<MailOutlined />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"passwordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please input your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                            <Input.Password\n                                size='large'\n                                type='password'\n                                placeholder='Password'\n                                name='password'\n                                value={password}\n                                onChange={e => onChange(e)}\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            />\n                        </Form.Item>\n                        <Form.Item \n                            name=\"confirmPasswordFormItem\" \n                            rules={[\n                                { \n                                    required: true,\n                                    message: 'Please confirm your Password!',\n                                },\n                                { \n                                    min: 8,\n                                    message:'Minimum 8 characters!',\n                                }\n                                ]}\n                            >\n                                <Input.Password\n                                    size='large'\n                                    type='password'\n                                    placeholder='Confirm Password'\n                                    name='re_password'\n                                    value={re_password}\n                                    onChange={e => onChange(e)}\n                                    iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                />\n                            </Form.Item>\n                        <Form.Item>\n                            <PasswordStrengthMeter password={password}/>\n                        </Form.Item>\n                        <Form.Item name=\"terms\" valuePropName=\"checked\">\n                            <Checkbox name=\"terms\" onChange={e => handleCheckbox(e)} value={terms}>I accept the <Link to='!#'>Terms of service</Link> and privacy policy</Checkbox>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button \n                                type=\"primary\"\n                                loading={loading}\n                                block\n                                disabled={!buttonIsEnabled}\n                                htmlType=\"submit\">\n                                Register\n                            </Button>\n                        </Form.Item>\n                        <Form.Item>\n                            <Text>Alredy have an account?<Link to='/login'> Login</Link></Text>\n                        </Form.Item>\n                    </Form>\n                </Space>\n        }\n        </div>\n        \n    );\n};\n\nexport default SignUp;","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/index.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/App.js",["87","88","89"],"import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport './app.css';\nimport SignUp from './pages/SignUp';\nimport Login from './pages/login';\nimport Index from './pages/Index';\nimport ResetPassword from './pages/ResetPassword';\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm';\nimport CenterItems from './containers/CenterItems';\nimport { checkAuthenticated } from './store/actions/auth'\n\naxios.defaults.withCredentials = true;\n\nfunction App() {\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkAuthenticated())\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <Index>\n\n            </Index>\n          </Route>\n          <Route path='/register'>\n            <CenterItems>\n              <SignUp/>\n            </CenterItems>\n          </Route>\n          <Route path='/login'>\n            <CenterItems>\n              <Login/>\n            </CenterItems>\n          </Route>\n          <Route exact path='/reset-password'>\n            <CenterItems>\n              <ResetPassword/>\n            </CenterItems>\n          </Route>\n          <Route exact path='/reset-password/confirm/:token' component={ResetPasswordConfirm}/>\n        </Switch> \n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/PasswordStrengthMeter.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/login.js",["90","91","92","93","94","95","96","97"],"import React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useMedia } from 'react-media';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Cookies from 'js-cookie';\nimport axios from 'axios';\n\nimport { Form, Input, Button, Checkbox, Space, Typography, message } from 'antd';\nimport { UserOutlined, LockOutlined, EyeInvisibleOutlined, EyeTwoTone } from '@ant-design/icons';\nimport { login } from '../store/actions/auth';\n\n\nconst { Text, Title  } = Typography;\n\nconst Login = () => {\n  const [loading, setLoading] = useState(false);\n  const successMessage = useSelector(state => state.successMessage);\n  const errorMessage = useSelector(state => state.errorMessage);\n  const isAuthenticated = useSelector(state => state.isAuthenticated);\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    rememberMe: true\n  });\n\n  const GLOBAL_MEDIA_QUERIES = {\n      xs: \"(max-width: 480px)\",\n      sm: \"(max-width: 576px)\",\n      md: \"(max-width: 768px)\",\n      lg: \"(max-width: 992px)\",\n      xl: \"(max-width: 1200px)\",\n      xxl: \"(max-width: 1600px)\",\n  };\n  const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n  const spaceXs = matches.xs ? 0 : 24;\n  \n  const handleCheckbox = e => {\n      setFormData(({ rememberMe, ...formData }) =>\n      ({ ...formData, rememberMe: !rememberMe })\n      );\n  };\n\n  const { email, password, rememberMe } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const isEnabled = email.length > 0 && password.length > 7\n\n  const confirmMessage = Cookies.get('confirmMessage');\n  const confirmationMessage = () => {\n    message.success(confirmMessage);\n  };\n\n  const success = (message) => {\n    message.success(message);\n  };\n  const error = (message) => {\n    message.success(message);\n  };\n\n  const warning = () => {\n    message.warning('You are already logged in');\n  };\n\n  const onSubmit = async () => {\n    if (isAuthenticated === false) {\n      setLoading(true);\n      const res = await axios.post('http://localhost:3000/account/login', {\n            email: email,\n            password: password,\n            withcredentials: true\n      });\n      if (res.data.success === true) {\n        message.success(res.data.message);\n      } else if (res.data.success === false) {\n        message.error(res.data.message);\n      }\n      setLoading(false);\n    } else {\n      warning()\n    }\n  }\n\n  useEffect(() => {\n    if(confirmMessage) {\n      confirmationMessage();\n    }\n  }, [])\n\n  //if (isAuthenticated)\n  //  return <Redirect to='/' />;\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100%', width: '100%', justifyContent: 'space-between'}}>\n      <Space direction=\"vertical\" size={spaceXs} >\n        <Title>EHR</Title>\n        <Title level={2}>Log in to your account</Title>\n        <Form \n          onFinish={onSubmit}\n          initialValues={{\n            remember: true,\n          }}\n          spellCheck=\"false\"\n        >\n          <Form.Item\n            initialValue={email}\n            name='emailFormItem' \n            rules={[\n              {\n                type: 'email',\n                message: 'The input is not a valid E-mail!',\n              },\n              {\n                required: true,\n                message: 'Please input your E-mail!',\n              },\n            ]}\n          >\n            <Input \n              size=\"large\" \n              type='email'\n              placeholder='Email'\n              name='email'\n              value={email}\n              onChange={e => onChange(e)}\n              prefix={<UserOutlined />}\n            />\n          </Form.Item>\n          <Form.Item initialValue={password} name=\"passwordFormItem\" rules={[\n            { \n              required: true,\n              message: 'Please input your Password!',\n            },\n            { \n              min: 8,\n              message:'Minimum 8 characters!',\n            }\n            ]}\n          >\n              <Input.Password\n                size='large'\n                type='password'\n                placeholder='Password'\n                name='password'\n                value={password}\n                onChange={e => onChange(e)}\n                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              />\n          </Form.Item>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Form.Item name=\"remember\" valuePropName=\"checked\">\n              <Checkbox onChange={e => handleCheckbox(e)} name=\"rememberMe\" value={rememberMe}>Remember me</Checkbox>\n            </Form.Item>\n            <Form.Item>\n              <Text>Don't have an account?<Link to='/register'> Register</Link></Text>\n            </Form.Item>\n          </div>\n          <Button \n            type=\"primary\"\n            loading={loading}\n            block\n            disabled={!isEnabled}\n            htmlType=\"submit\">\n            Login\n          </Button>\n        </Form>\n        <Text>Forgot your Password?<Link to='/reset-password'> Reset Password</Link></Text>\n      </Space>\n    </div>\n  );\n};\n\nexport default Login;","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/store.js",[],["98","99"],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/index.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/reducers/auth.js",["100"],"import produce from 'immer';\nimport {\n    AUTHENTICATED_FAILED,\n    AUTHENTICATED_SUCCESS,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAILED,\n} from '../actions/types';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: [],\n    success: undefined\n};\n\nexport default function(state=initialState, action) {\n    const { type, payload } = action;\n    \n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return produce(state, draft => {\n                draft.isAuthenticated = true;\n            })\n        case AUTHENTICATED_FAILED:\n            return produce(state, draft => {\n                draft.isAuthenticated = false;\n            })\n        case USER_LOADED_SUCCESS:\n            return produce(state, draft => {\n                draft.success = true;\n                draft.user = payload.user;\n            })\n        case USER_LOADED_FAILED:\n            return produce(state, draft => {\n                draft.success = false;\n            })\n        default:\n            return state\n    }\n}","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/types.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/store/actions/auth.js",[],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/ResetPassword.js",["101","102","103","104","105","106","107","108","109","110","111"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useMedia } from 'react-media';\nimport axios from 'axios';\n\nimport { forgotPassword } from '../store/actions/auth';\nimport { Typography, Form, Input, Tooltip, Button, Space, message } from 'antd';\nimport { UserOutlined, ArrowLeftOutlined } from '@ant-design/icons';\nimport { ReactComponent as EmailIcon } from '../assets/EmailIcon.svg';\n\nconst { Title, Text } = Typography;\n\nconst ResetPassword = () => {\n    const [loading, setLoading] = useState(false);\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const GLOBAL_MEDIA_QUERIES = {\n        xs: \"(max-width: 480px)\",\n        sm: \"(max-width: 576px)\",\n        md: \"(max-width: 768px)\",\n        lg: \"(max-width: 992px)\",\n        xl: \"(max-width: 1200px)\",\n        xxl: \"(max-width: 1600px)\",\n    };\n    const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES });\n    const spaceXs = matches.xs ? 24 : 24;\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    var mailformat = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    const isEnabled = email.match(mailformat) ;\n\n    const success = message => {\n        message.success(message);\n    };\n    \n    const error = message => {\n        message.error(message);\n    };\n\n    const onSubmit = async () => {\n        setLoading(true);\n        const res = await axios.put('http://localhost:3000/account/reset-password', {\n            email: email,\n            withcredentials: true\n        });\n        if (res.data.success === true) {\n            setRequestSent(true);\n            message.success(res.data.message);\n        } else if (res.data.success === false) {\n            message.error(res.data.message);\n        }\n        setLoading(false);\n    };\n\n    return (\n        <div>\n            { requestSent?\n                <div>\n                    <Space direction=\"vertical\" size={spaceXs} style={{ width: '100%' }}>\n                        <Tooltip title=\"back to Login\">\n                            <Link to='/login'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                    <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                                </div>\n                            </Link>\n                        </Tooltip>\n                        <div style={{ width: '100%', justifyContent: 'center', display: 'flex' }}>\n                            <EmailIcon style={{ height: '90px'}}/>\n                        </div>\n                        <Title style={{ textAlign: 'center' }}level={2}>Check your Email</Title>\n                        <div style={{ textAlign: 'center'}}>\n                            <Text >We have sent you your password recovery instructions to your email.</Text>\n                        </div>\n                    </Space>\n                </div>:\n                <div>\n                    <Space direction=\"vertical\" size={spaceXs} style={{ width: '100%' }}>\n                        <Tooltip title=\"back to Login\">\n                            <Link to='/login'>\n                                <div style={{ display: 'flex', alignItems: 'center' }}>\n                                    <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                    <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                                </div>\n                            </Link>\n                        </Tooltip>\n                        <Title level={2}>Forgot your Password?</Title>\n                        <Text>We'll send a recovery link to your E-mail address.</Text>\n                        <Form \n                            onFinish={onSubmit}\n                            spellCheck=\"false\"\n                            >\n                            <Form.Item\n                            initialValue={email}\n                            name='emailFormItem' \n                            rules={[\n                                {\n                                type: 'email',\n                                message: 'The input is not a valid E-mail!',\n                                },\n                                {\n                                required: true,\n                                message: 'Please input your E-mail!',\n                                },\n                            ]}\n                            >\n                                <Input \n                                    size=\"large\" \n                                    placeholder='Email'\n                                    name='email'\n                                    value={email}\n                                    onChange={e => onChange(e)}\n                                    prefix={<UserOutlined />}\n                                />\n                            </Form.Item>\n                            <Button \n                                type=\"primary\"\n                                loading={loading}\n                                block\n                                disabled={!isEnabled}\n                                htmlType=\"submit\">\n                                Reset Password\n                            </Button>\n                        </Form>\n                    </Space>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ResetPassword;","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/ResetPasswordConfirm.js",["112","113","114","115","116","117"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\n\nimport PasswordStrengthMeter from '../components/PasswordStrengthMeter'\nimport { Typography, Form, Tooltip, Input, Button, Space, message } from 'antd';\nimport { ArrowLeftOutlined,  EyeInvisibleOutlined, EyeTwoTone, LockOutlined } from '@ant-design/icons';\nimport { resetPassword } from '../store/actions/auth';\nimport CenterItems from '../containers/CenterItems'\n\nconst { Title, Text } = Typography;\n\nconst ResetPasswordConfirm = ({ match }) => {\n    const [loading, setLoading] = useState(false);\n    const [requestSent, setRequestSent] = useState(false);\n    const [messageChanged, setMessageChanged] = useState(0);\n    const successMessage = useSelector(state => state.successMessage);\n    const errorMessage = useSelector(state => state.errorMessage);\n    const dispatch = useDispatch();\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const isEnabled = new_password === re_new_password && new_password.length > 7\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const success = () => {\n        message.success(successMessage);\n    };\n    \n    const error = () => {\n        message.error(errorMessage);\n    };\n\n    const onSubmit = async () => {\n        setLoading(true);\n        const resetLink = match.params.token\n        const res = await axios.post('http://localhost:3000/account/reset-password/confirm', {\n            resetLink: resetLink,\n            password: new_password,\n            withcredentials: true\n        });\n        if (res.data.success === true) {\n            message.success(res.data.message);\n        } else if (res.data.success === false) {\n            message.error(res.data.message);\n        }\n        setRequestSent(true);\n        setLoading(false);\n    };\n\n    useEffect(() => {\n        if (errorMessage) {\n            return error();\n        }\n        if (successMessage && !errorMessage) {\n            return success()\n        }\n    }, [errorMessage ,successMessage, messageChanged]);\n    return(\n        <CenterItems>\n            <div>\n                <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n                    <Tooltip title=\"back to Login\">\n                        <Link to='/login'>\n                            <div style={{ display: 'flex', alignItems: 'center' }}>\n                                <ArrowLeftOutlined style={{ fontSize: '18px', marginRight: '10px' }}/>\n                                <Title style={{ margin: '0px'}}level={5}>Back</Title>\n                            </div>\n                        </Link>\n                    </Tooltip>\n                    <Title level={2}>Create new Password</Title>\n                    <Text>Please choose your new password</Text>\n                    <Form \n                        onFinish={onSubmit}\n                        spellcheck=\"false\"\n                        >\n                        <Form.Item name=\"newPasswordFormItem\" rules={[\n                            { \n                            required: true,\n                            message: 'Please input your new Password!',\n                            },\n                            { \n                            min: 8,\n                            message:'Minimum 8 characters!',\n                            }\n                            ]}\n                            >\n                            <Input.Password\n                                size='large'\n                                type='password'\n                                placeholder='New Password'\n                                name='new_password'\n                                value={new_password}\n                                onChange={e => onChange(e)}\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            />\n                        </Form.Item>\n                        <Form.Item name=\"confirmPasswordFormItem\" rules={[\n                            { \n                            required: true,\n                            message: 'Please confirm your Password!',\n                            },\n                            { \n                            min: 8,\n                            message:'Minimum 8 characters!',\n                            }\n                            ]}\n                            >\n                            <Input.Password\n                                size='large'\n                                type='password'\n                                placeholder='Confirm Password'\n                                name='re_new_password'\n                                value={re_new_password}\n                                onChange={e => onChange(e)}\n                                iconRender={visible => (visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />)}\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                            />\n                        </Form.Item>\n                        <Form.Item>\n                            <PasswordStrengthMeter password={new_password}/>\n                        </Form.Item>\n                        <Button \n                            type=\"primary\"\n                            loading={loading}\n                            block\n                            disabled={!isEnabled}\n                            htmlType=\"submit\">\n                            Set new Password\n                        </Button>\n                    </Form>\n                </Space>\n            </div>\n        </CenterItems>\n    );\n};\n\nexport default ResetPasswordConfirm;","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/Sider.js",["118","119","120","121","122","123","124","125"],"/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/pages/Index.js",["126","127","128","129"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport axios from 'axios';\n\nimport LeftSider from '../components/Sider'\nimport { Layout } from 'antd';\n\nconst Index = () => {\n    const isAuthenticated = useSelector(state => state.isAuthenticated);\n    const user = useSelector(state => state.user);\n      \n    return (\n        <Layout style={{ minHeight: '100vh' }}>\n            <LeftSider/>\n                {isAuthenticated? \n                    `Hallo ${user.firstName}, du bist eingeloggt`:\n                    'Ich bin nicht eingeloggt'\n                }\n        </Layout>\n    );\n};\n\nexport default Index;","/run/media/jonas/DATA/hyperledger/networkWithCouchdb/fabric-samples/web-app/frontend/src/components/SidebarComps/NameIcon.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"134","severity":1,"message":"138","line":12,"column":10,"nodeType":"136","messageId":"137","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"139","line":17,"column":11,"nodeType":"136","messageId":"137","endLine":17,"endColumn":19},{"ruleId":"134","severity":1,"message":"140","line":20,"column":11,"nodeType":"136","messageId":"137","endLine":20,"endColumn":26},{"ruleId":"141","severity":1,"message":"142","line":45,"column":44,"nodeType":"143","messageId":"144","endLine":45,"endColumn":45,"suggestions":"145"},{"ruleId":"141","severity":1,"message":"142","line":45,"column":69,"nodeType":"143","messageId":"144","endLine":45,"endColumn":70,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"142","line":45,"column":78,"nodeType":"143","messageId":"144","endLine":45,"endColumn":79,"suggestions":"147"},{"ruleId":"141","severity":1,"message":"142","line":45,"column":82,"nodeType":"143","messageId":"144","endLine":45,"endColumn":83,"suggestions":"148"},{"ruleId":"134","severity":1,"message":"149","line":48,"column":11,"nodeType":"136","messageId":"137","endLine":48,"endColumn":18},{"ruleId":"134","severity":1,"message":"150","line":52,"column":11,"nodeType":"136","messageId":"137","endLine":52,"endColumn":16},{"ruleId":"134","severity":1,"message":"151","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"140","line":18,"column":9,"nodeType":"136","messageId":"137","endLine":18,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":23,"column":6,"nodeType":"154","endLine":23,"endColumn":8,"suggestions":"155"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"134","severity":1,"message":"156","line":10,"column":10,"nodeType":"136","messageId":"137","endLine":10,"endColumn":15},{"ruleId":"134","severity":1,"message":"157","line":17,"column":9,"nodeType":"136","messageId":"137","endLine":17,"endColumn":23},{"ruleId":"134","severity":1,"message":"158","line":18,"column":9,"nodeType":"136","messageId":"137","endLine":18,"endColumn":21},{"ruleId":"134","severity":1,"message":"139","line":20,"column":9,"nodeType":"136","messageId":"137","endLine":20,"endColumn":17},{"ruleId":"134","severity":1,"message":"149","line":55,"column":9,"nodeType":"136","messageId":"137","endLine":55,"endColumn":16},{"ruleId":"134","severity":1,"message":"150","line":58,"column":9,"nodeType":"136","messageId":"137","endLine":58,"endColumn":14},{"ruleId":"152","severity":1,"message":"159","line":89,"column":6,"nodeType":"154","endLine":89,"endColumn":8,"suggestions":"160"},{"ruleId":"130","replacedBy":"161"},{"ruleId":"132","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":15,"column":1,"nodeType":"165","endLine":39,"endColumn":2},{"ruleId":"134","severity":1,"message":"166","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"167","line":3,"column":10,"nodeType":"136","messageId":"137","endLine":3,"endColumn":21},{"ruleId":"134","severity":1,"message":"168","line":3,"column":23,"nodeType":"136","messageId":"137","endLine":3,"endColumn":34},{"ruleId":"134","severity":1,"message":"169","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":36,"column":44,"nodeType":"143","messageId":"144","endLine":36,"endColumn":45,"suggestions":"170"},{"ruleId":"141","severity":1,"message":"142","line":36,"column":69,"nodeType":"143","messageId":"144","endLine":36,"endColumn":70,"suggestions":"171"},{"ruleId":"141","severity":1,"message":"142","line":36,"column":78,"nodeType":"143","messageId":"144","endLine":36,"endColumn":79,"suggestions":"172"},{"ruleId":"141","severity":1,"message":"142","line":36,"column":82,"nodeType":"143","messageId":"144","endLine":36,"endColumn":83,"suggestions":"173"},{"ruleId":"134","severity":1,"message":"149","line":39,"column":11,"nodeType":"136","messageId":"137","endLine":39,"endColumn":18},{"ruleId":"134","severity":1,"message":"150","line":43,"column":11,"nodeType":"136","messageId":"137","endLine":43,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"174","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":23},{"ruleId":"134","severity":1,"message":"175","line":16,"column":12,"nodeType":"136","messageId":"137","endLine":16,"endColumn":23},{"ruleId":"134","severity":1,"message":"176","line":17,"column":28,"nodeType":"136","messageId":"137","endLine":17,"endColumn":45},{"ruleId":"134","severity":1,"message":"139","line":20,"column":11,"nodeType":"136","messageId":"137","endLine":20,"endColumn":19},{"ruleId":"152","severity":1,"message":"177","line":64,"column":8,"nodeType":"154","endLine":64,"endColumn":54,"suggestions":"178"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":16,"nodeType":"136","messageId":"137","endLine":2,"endColumn":24},{"ruleId":"134","severity":1,"message":"179","line":11,"column":5,"nodeType":"136","messageId":"137","endLine":11,"endColumn":17},{"ruleId":"134","severity":1,"message":"180","line":12,"column":5,"nodeType":"136","messageId":"137","endLine":12,"endColumn":17},{"ruleId":"134","severity":1,"message":"181","line":15,"column":9,"nodeType":"136","messageId":"137","endLine":15,"endColumn":15},{"ruleId":"134","severity":1,"message":"182","line":15,"column":17,"nodeType":"136","messageId":"137","endLine":15,"endColumn":24},{"ruleId":"134","severity":1,"message":"183","line":15,"column":26,"nodeType":"136","messageId":"137","endLine":15,"endColumn":32},{"ruleId":"134","severity":1,"message":"184","line":16,"column":9,"nodeType":"136","messageId":"137","endLine":16,"endColumn":13},{"ruleId":"134","severity":1,"message":"185","line":16,"column":15,"nodeType":"136","messageId":"137","endLine":16,"endColumn":20},{"ruleId":"134","severity":1,"message":"166","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"151","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"168","line":2,"column":23,"nodeType":"136","messageId":"137","endLine":2,"endColumn":34},{"ruleId":"134","severity":1,"message":"186","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":13},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'register' is defined but never used.","'dispatch' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["189","190"],["191","192"],["193","194"],["195","196"],"'success' is assigned a value but never used.","'error' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["197"],"'login' is defined but never used.","'successMessage' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'confirmMessage' and 'confirmationMessage'. Either include them or remove the dependency array.",["198"],["187"],["188"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","'forgotPassword' is defined but never used.",["199","200"],["201","202"],["203","204"],["205","206"],"'resetPassword' is defined but never used.","'requestSent' is assigned a value but never used.","'setMessageChanged' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'error' and 'success'. Either include them or remove the dependency array.",["207"],"'TeamOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'Header' is assigned a value but never used.","'Content' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Text' is assigned a value but never used.","'Title' is assigned a value but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"messageId":"208","fix":"216","desc":"210"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"208","fix":"218","desc":"210"},{"messageId":"211","fix":"219","desc":"213"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"messageId":"208","fix":"224","desc":"210"},{"messageId":"211","fix":"225","desc":"213"},{"messageId":"208","fix":"226","desc":"210"},{"messageId":"211","fix":"227","desc":"213"},{"messageId":"208","fix":"228","desc":"210"},{"messageId":"211","fix":"229","desc":"213"},{"messageId":"208","fix":"230","desc":"210"},{"messageId":"211","fix":"231","desc":"213"},{"desc":"232","fix":"233"},"removeEscape",{"range":"234","text":"235"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"236","text":"237"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"238","text":"235"},{"range":"239","text":"237"},{"range":"240","text":"235"},{"range":"241","text":"237"},{"range":"242","text":"235"},{"range":"243","text":"237"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [confirmMessage, confirmationMessage]",{"range":"246","text":"247"},{"range":"248","text":"235"},{"range":"249","text":"237"},{"range":"250","text":"235"},{"range":"251","text":"237"},{"range":"252","text":"235"},{"range":"253","text":"237"},{"range":"254","text":"235"},{"range":"255","text":"237"},"Update the dependencies array to be: [errorMessage, successMessage, messageChanged, error, success]",{"range":"256","text":"257"},[1718,1719],"",[1718,1718],"\\",[1743,1744],[1743,1743],[1752,1753],[1752,1752],[1756,1757],[1756,1756],[787,789],"[dispatch]",[2584,2586],"[confirmMessage, confirmationMessage]",[1279,1280],[1279,1279],[1304,1305],[1304,1304],[1313,1314],[1313,1313],[1317,1318],[1317,1317],[2227,2273],"[errorMessage, successMessage, messageChanged, error, success]"]